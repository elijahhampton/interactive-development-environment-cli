[{"/Users/elijahhampton/Desktop/editor/src/index.tsx":"1","/Users/elijahhampton/Desktop/editor/src/plugins/unpkg-path-plugin.ts":"2","/Users/elijahhampton/Desktop/editor/src/plugins/fetch-plugin.ts":"3","/Users/elijahhampton/Desktop/editor/src/components/CodeEditor.tsx":"4","/Users/elijahhampton/Desktop/editor/src/components/CodePreview.tsx":"5"},{"size":1490,"mtime":1613618727700,"results":"6","hashOfConfig":"7"},{"size":830,"mtime":1609447184000,"results":"8","hashOfConfig":"7"},{"size":1797,"mtime":1609453365000,"results":"9","hashOfConfig":"7"},{"size":2396,"mtime":1613612707827,"results":"10","hashOfConfig":"7"},{"size":941,"mtime":1613615327616,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uevbkb",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},"/Users/elijahhampton/Desktop/editor/src/index.tsx",[],"/Users/elijahhampton/Desktop/editor/src/plugins/unpkg-path-plugin.ts",[],["24","25"],"/Users/elijahhampton/Desktop/editor/src/plugins/fetch-plugin.ts",[],"/Users/elijahhampton/Desktop/editor/src/components/CodeEditor.tsx",[],"/Users/elijahhampton/Desktop/editor/src/components/CodePreview.tsx",["26"],"import { useState, useRef, useEffect } from 'react';\nimport CodePreviewProps from \"../interface/CodePreview\";\n\nconst html = `\n<html>\n  <head></head>\n  <body>\n    <div id=\"root\"></div>\n    <script>\n      window.addEventListener('message', (event) => {\n        try {\n          eval(event.data);\n        } catch (err) {\n          const root = document.querySelector('#root');\n          root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n          console.error(err);\n        }\n      }, false);\n    </script>\n  </body>\n</html>\n`;\n\nconst CodePreview: React.FC<CodePreviewProps> = ({ code }) => {\n    const iframe = useRef<any>();\n\n    useEffect(() => {\n        iframe.current.srcdoc = html;\n        iframe.current.contentWindow.postMessage(code, '*');\n    }, [code]);\n\n    return <iframe \n    title=\"preview\"\n    ref={iframe} \n    sandbox=\"allow-scripts\" \n    srcDoc={html} \n    />\n}\n\nexport default CodePreview;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":10,"nodeType":"33","messageId":"34","endLine":1,"endColumn":18},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]